{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styles from 'client/styles/LoginForm.module.css';\n\nfunction EditForm() {\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()).then(data => {\n      if (data.token) {\n        // success login\n        console.log(data);\n        userContext.loginDispatch({\n          type: 'login',\n          token: data.token,\n          mail: data.user_display_name,\n          pass: pass,\n          id: data.id\n        });\n        localStorage.setItem('userInfo', JSON.stringify({\n          name: data.user_display_name,\n          token: data.token\n        }));\n        Router.push('/');\n      } else {\n        // wrong information\n        userContext.loginDispatch({\n          type: 'error',\n          error: 'wrong email or password'\n        });\n        resetEmail('');\n        resetPass('');\n      }\n    }).catch(err => {\n      // other errors\n      userContext.loginDispatch({\n        type: 'error',\n        error: err\n      });\n    }); // ------------------------------------------------\n\n    e.preventDefault();\n  };\n\n  return __jsx(\"div\", {\n    className: styles.formConatainer\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"E-mail: \"), __jsx(\"input\", _extends({}, bindEmail, {\n    type: \"text\",\n    className: styles.formTextarea,\n    ref: inputRef\n  }))), __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Password: \"), __jsx(\"input\", _extends({}, bindPass, {\n    type: \"password\",\n    className: styles.formTextarea\n  }))), __jsx(\"div\", {\n    style: {\n      height: '10px',\n      textAlign: 'center'\n    }\n  }, userContext.error && !email && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, \"Wrong email or password\")), __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/[id]/Edit.js"],"names":["React","styles","EditForm","submitHandler","e","requestOptions","method","headers","body","JSON","stringify","username","email","password","pass","fetch","toeknUrl","then","resf","json","data","token","console","log","userContext","loginDispatch","type","mail","user_display_name","id","localStorage","setItem","name","Router","push","error","resetEmail","resetPass","catch","err","preventDefault","formConatainer","form","formOption","formLabel","bindEmail","formTextarea","inputRef","bindPass","height","textAlign","color","formSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styles from 'client/styles/LoginForm.module.css'\n\nfunction EditForm() {\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json())\n    .then(data => {\n      if(data.token){\n        // success login\n        console.log(data)\n        userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n        localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n        Router.push('/')\n      } else {\n        // wrong information\n        userContext.loginDispatch({type:'error', error:'wrong email or password'})\n        resetEmail('')\n        resetPass('')\n      }\n    })\n    .catch(err => {\n      // other errors\n      userContext.loginDispatch({type:'error', error:err})\n    })\n    // ------------------------------------------------\n    e.preventDefault()\n  }\n  return (\n    <div className={styles.formConatainer}>\n      <form onSubmit={submitHandler} className={styles.form}>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>E-mail: </label>\n          <input {...bindEmail} type=\"text\" className={styles.formTextarea} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Password: </label>\n          <input {...bindPass} type=\"password\" className={styles.formTextarea}/>\n        </div>\n        <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div>\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditForm\n"]},"metadata":{},"sourceType":"module"}