{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport ListLists from './listlists';\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\nexport default function List() {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    posts: []\n  }); // console.log(data);\n\n  useEffect(() => {\n    // console.log(\"in useEffect\");\n    const fetchUsers = async () => {\n      // console.log(POSTS_SERVICE_URL);\n      const response = await axios.get(POSTS_SERVICE_URL);\n      setData(response.data); // console.log(response);\n    }; // console.log(\"finish function setup\");\n\n\n    fetchUsers(); // console.log(\"run the function\");\n  }, []); // Runs once\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n  // constructor(props) => {\n  //   super(props)\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n  // fetchPosts = this.fetchPostsAsync\n\n  console.log(data);\n  console.log(data.posts);\n  const postList = data.posts.map(post => __jsx(\"div\", null, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`\n  }, __jsx(\"a\", {\n    key: post.id,\n    postData: `${post}`\n  }, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"p\", null, \"Content: \", post.content.rendered)));\n  console.log(postList);\n  return __jsx(\"div\", null, postList);\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","useEffect","useState","axios","Link","ListLists","POSTS_SERVICE_URL","List","data","setData","posts","fetchUsers","response","get","console","log","postList","map","post","id","title","rendered","status","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,iBAAiB,GAAG,kCAA1B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC,CAF6B,CAG7B;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,UAAU,GAAG,YAAY;AAC7B;AACA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,iBAAV,CAAvB;AACAG,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAV,CAAP,CAH6B,CAI7B;AACD,KALD,CAFc,CAQd;;;AACAG,IAAAA,UAAU,GATI,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT,CAL6B,CAgBrB;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACE,KAAjB;AACA,QAAMM,QAAQ,GAAGR,IAAI,CAACE,KAAL,CAAWO,GAAX,CAAeC,IAAI,IAChC,mBACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG;AAA/C,KACE;AAAG,IAAA,GAAG,EAAED,IAAI,CAACC,EAAb;AAAiB,IAAA,QAAQ,EAAG,GAAED,IAAK;AAAnC,KACE,6BAAYA,IAAI,CAACE,KAAL,CAAWC,QAAvB,CADF,CADF,CADF,EAIE,6BAAYH,IAAI,CAACI,MAAjB,CAJF,EAKE,8BAAaJ,IAAI,CAACK,OAAL,CAAaF,QAA1B,CALF,CADa,CAAjB;AAQAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEA,SAAO,mBAAMA,QAAN,CAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link'\nimport ListLists from './listlists'\n\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n\nexport default function List() {\n\n  const [data, setData] = useState({ posts: []});\n  // console.log(data);\n\n  useEffect(() => {\n    // console.log(\"in useEffect\");\n    const fetchUsers = async () => {\n      // console.log(POSTS_SERVICE_URL);\n      const response = await axios.get(POSTS_SERVICE_URL);\n      setData(response.data);\n      // console.log(response);\n    };\n    // console.log(\"finish function setup\");\n    fetchUsers();\n    // console.log(\"run the function\");\n  }, []); // Runs once\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n\n  // constructor(props) => {\n  //   super(props)\n\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n\n  // fetchPosts = this.fetchPostsAsync\n\n  console.log(data);\n  console.log(data.posts);\n  const postList = data.posts.map(post =>\n      <div>\n        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n          <a key={post.id} postData={`${post}`}>\n            <h2>Title: {post.title.rendered}</h2></a></Link>\n        <p>Status: {post.status}</p>\n        <p>Content: {post.content.rendered}</p>\n      </div>)\n  console.log(postList);\n\n  return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}