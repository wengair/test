{"ast":null,"code":"import { useContext, useEffect } from 'react';\nimport { UserContext } from 'pages/_app';\n\nfunction LoginCheck(props) {\n  const userContext = useContext(UserContext);\n  console.log('run LoginCheck');\n  useEffect(() => {\n    const localStorageRef = JSON.parse(localStorage.getItem('userInfo')); // console.log('localStorageRef =')\n    // console.log(localStorageRef.token)\n\n    if (!userContext.loginState.isLogin && localStorageRef) {\n      const requestOptions1 = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + localStorageRef.token\n        }\n      };\n      fetch('http://localhost/wp-json/wp/v2/users/me', requestOptions1) // test if token can be used on other api\n      .then(resf1 => resf1.json()) // necessary!\n      .then(data1 => {\n        userContext.loginDispatch({\n          type: 'login',\n          token: localStorageRef.token,\n          mail: data1.name,\n          pass: '',\n          id: data1.id\n        });\n        Router.push('/');\n      }).catch(err => console.log(err));\n    }\n  }, []);\n  return props.children;\n}\n\nexport default LoginCheck;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/LoginCheck.js"],"names":["useContext","useEffect","UserContext","LoginCheck","props","userContext","console","log","localStorageRef","JSON","parse","localStorage","getItem","loginState","isLogin","requestOptions1","method","headers","token","fetch","then","resf1","json","data1","loginDispatch","type","mail","name","pass","id","Router","push","catch","err","children"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,SAApB,QAAoC,OAApC;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,WAAW,GAAGL,UAAU,CAACE,WAAD,CAA9B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAN,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMO,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAxB,CADa,CAEb;AACA;;AACA,QAAG,CAACP,WAAW,CAACQ,UAAZ,CAAuBC,OAAxB,IAAmCN,eAAtC,EAAsD;AACpD,YAAMO,eAAe,GAAG;AACtBC,QAAAA,MAAM,EAAE,KADc;AAEtBC,QAAAA,OAAO,EAAE;AAAE,2BAAiB,YAAYT,eAAe,CAACU;AAA/C;AAFa,OAAxB;AAIAC,MAAAA,KAAK,CAAC,yCAAD,EAA4CJ,eAA5C,CAAL,CACA;AADA,OAEGK,IAFH,CAEQC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAFjB,EAE+B;AAF/B,OAGGF,IAHH,CAGQG,KAAK,IAAI;AACblB,QAAAA,WAAW,CAACmB,aAAZ,CAA0B;AAACC,UAAAA,IAAI,EAAC,OAAN;AAAeP,UAAAA,KAAK,EAACV,eAAe,CAACU,KAArC;AAA4CQ,UAAAA,IAAI,EAACH,KAAK,CAACI,IAAvD;AAA6DC,UAAAA,IAAI,EAAC,EAAlE;AAAsEC,UAAAA,EAAE,EAACN,KAAK,CAACM;AAA/E,SAA1B;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD,OANH,EAOGC,KAPH,CAOSC,GAAG,IAAK3B,OAAO,CAACC,GAAR,CAAY0B,GAAZ,CAPjB;AAQD;AACF,GAlBQ,EAkBP,EAlBO,CAAT;AAmBA,SAAO7B,KAAK,CAAC8B,QAAb;AACD;;AAED,eAAe/B,UAAf","sourcesContent":["import {useContext, useEffect} from 'react'\nimport {UserContext} from 'pages/_app'\n\nfunction LoginCheck(props) {\n  const userContext = useContext(UserContext)\n  console.log('run LoginCheck')\n  useEffect(() =>{\n    const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n    // console.log('localStorageRef =')\n    // console.log(localStorageRef.token)\n    if(!userContext.loginState.isLogin && localStorageRef){\n      const requestOptions1 = {\n        method: 'GET',\n        headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n        };\n      fetch('http://localhost/wp-json/wp/v2/users/me', requestOptions1) \n      // test if token can be used on other api\n        .then(resf1 => resf1.json()) // necessary!\n        .then(data1 => {\n          userContext.loginDispatch({type:'login', token:localStorageRef.token, mail:data1.name, pass:'', id:data1.id})\n          Router.push('/')\n        })\n        .catch(err  => console.log(err))\n    } \n  },[])\n  return props.children\n}\n\nexport default LoginCheck\n"]},"metadata":{},"sourceType":"module"}