{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styles from 'client/styles/Edit.module.css';\nimport { UserContext } from 'pages/_app';\n\nfunction EditForm({\n  post\n}) {\n  const userContext = useContext(UserContext);\n  console.log('in edit');\n  console.log(userContext.loginState);\n  console.log('post=');\n  console.log(post);\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()).then(data => {\n      if (data.token) {\n        // success login\n        console.log(data);\n        userContext.loginDispatch({\n          type: 'login',\n          token: data.token,\n          mail: data.user_display_name,\n          pass: pass,\n          id: data.id\n        });\n        localStorage.setItem('userInfo', JSON.stringify({\n          name: data.user_display_name,\n          token: data.token\n        }));\n        Router.push('/');\n      } else {\n        // wrong information\n        userContext.loginDispatch({\n          type: 'error',\n          error: 'wrong email or password'\n        });\n        resetEmail('');\n        resetPass('');\n      }\n    }).catch(err => {\n      // other errors\n      userContext.loginDispatch({\n        type: 'error',\n        error: err\n      });\n    }); // ------------------------------------------------\n\n    e.preventDefault();\n  };\n\n  return __jsx(\"div\", {\n    className: \"formConatainer\"\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/[id]/Edit.js"],"names":["React","useContext","styles","UserContext","EditForm","post","userContext","console","log","loginState","submitHandler","e","requestOptions","method","headers","body","JSON","stringify","username","email","password","pass","fetch","toeknUrl","then","resf","json","data","token","loginDispatch","type","mail","user_display_name","id","localStorage","setItem","name","Router","push","error","resetEmail","resetPass","catch","err","preventDefault","form","formSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACxB,QAAMC,WAAW,GAAGL,UAAU,CAACE,WAAD,CAA9B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,UAAxB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAMK,aAAa,GAAGC,CAAC,IAAI;AACzB;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,QAAQ,EAAEC,KAAZ;AAAmBC,QAAAA,QAAQ,EAACC;AAA5B,OAAf;AAHe,KAAvB;AAKAC,IAAAA,KAAK,CAACC,QAAD,EAAWX,cAAX,CAAL,CACCY,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACC,KAAR,EAAc;AACZ;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACArB,QAAAA,WAAW,CAACuB,aAAZ,CAA0B;AAACC,UAAAA,IAAI,EAAC,OAAN;AAAeF,UAAAA,KAAK,EAACD,IAAI,CAACC,KAA1B;AAAiCG,UAAAA,IAAI,EAACJ,IAAI,CAACK,iBAA3C;AAA8DX,UAAAA,IAAI,EAACA,IAAnE;AAAyEY,UAAAA,EAAE,EAACN,IAAI,CAACM;AAAjF,SAA1B;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCnB,IAAI,CAACC,SAAL,CAAe;AAACmB,UAAAA,IAAI,EAACT,IAAI,CAACK,iBAAX;AAA8BJ,UAAAA,KAAK,EAACD,IAAI,CAACC;AAAzC,SAAf,CAAjC;AACAS,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD,OAND,MAMO;AACL;AACAhC,QAAAA,WAAW,CAACuB,aAAZ,CAA0B;AAACC,UAAAA,IAAI,EAAC,OAAN;AAAeS,UAAAA,KAAK,EAAC;AAArB,SAA1B;AACAC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,KAfD,EAgBCC,KAhBD,CAgBOC,GAAG,IAAI;AACZ;AACArC,MAAAA,WAAW,CAACuB,aAAZ,CAA0B;AAACC,QAAAA,IAAI,EAAC,OAAN;AAAeS,QAAAA,KAAK,EAACI;AAArB,OAA1B;AACD,KAnBD,EAPyB,CA2BzB;;AACAhC,IAAAA,CAAC,CAACiC,cAAF;AACD,GA7BD;;AA8BA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,QAAQ,EAAElC,aAAhB;AAA+B,IAAA,SAAS,EAAER,MAAM,CAAC2C;AAAjD,KAYE;AAAQ,IAAA,SAAS,EAAE3C,MAAM,CAAC4C;AAA1B,cAZF,CADF,CADF;AAkBD;;AAED,eAAe1C,QAAf","sourcesContent":["import React, {useContext} from 'react'\nimport styles from 'client/styles/Edit.module.css'\nimport {UserContext} from 'pages/_app'\n\nfunction EditForm({post}) {\n  const userContext = useContext(UserContext)\n  console.log('in edit')\n  console.log(userContext.loginState)\n  console.log('post=')\n  console.log(post)\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json())\n    .then(data => {\n      if(data.token){\n        // success login\n        console.log(data)\n        userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n        localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n        Router.push('/')\n      } else {\n        // wrong information\n        userContext.loginDispatch({type:'error', error:'wrong email or password'})\n        resetEmail('')\n        resetPass('')\n      }\n    })\n    .catch(err => {\n      // other errors\n      userContext.loginDispatch({type:'error', error:err})\n    })\n    // ------------------------------------------------\n    e.preventDefault()\n  }\n  return (\n    <div className=\"formConatainer\">\n      <form onSubmit={submitHandler} className={styles.form}>\n        {/* <div className={styles.formOption}>\n          <label className={styles.formLabel}>E-mail: </label>\n          <input {...bindEmail} type=\"text\" className={styles.formTextarea} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Password: </label>\n          <input {...bindPass} type=\"password\" className={styles.formTextarea}/>\n        </div> */}\n        {/* <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div> */}\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditForm\n"]},"metadata":{},"sourceType":"module"}