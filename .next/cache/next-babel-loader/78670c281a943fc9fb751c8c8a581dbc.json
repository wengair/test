{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState, useLayoutEffect } from 'react';\nimport Link from 'next/link';\nimport styles from '../styles/List.module.css';\nexport default function List() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var POSTS_SERVICE_URL = 'http://localhost:80/wp-json/wp/v2/posts';\n\n  var useFetch = function useFetch(url, options) {\n    _s();\n\n    var _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        response = _React$useState2[0],\n        setResponse = _React$useState2[1];\n\n    var _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        error = _React$useState4[0],\n        setError = _React$useState4[1];\n\n    React.useEffect(function () {\n      var fetchData = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _res, json;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return fetch(url, options);\n\n                case 3:\n                  _res = _context.sent;\n                  _context.next = 6;\n                  return _res.json();\n\n                case 6:\n                  json = _context.sent;\n                  setResponse(json);\n                  _context.next = 14;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](0);\n                  setError(_context.t0);\n                  console.log(_context.t0);\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 10]]);\n        }));\n\n        return function fetchData() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchData();\n    }, []);\n    return {\n      response: response,\n      error: error\n    };\n  };\n\n  _s(useFetch, \"92kGcqJmUZHxj5g8slhrA1SfVKo=\");\n\n  var res = useFetch(POSTS_SERVICE_URL, {});\n\n  if (!res.response) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  var data = res.response; // console.log(\"from list.js\")\n\n  console.log(data);\n  var postList = data.map(function (post, index) {\n    return __jsx(\"div\", {\n      className: styles.postContainer,\n      key: post.id\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id)\n    }, __jsx(\"a\", {\n      postdata: \"\".concat(post)\n    }, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"div\", {\n      className: \"text-container \".concat(styles.contentStyle),\n      dangerouslySetInnerHTML: {\n        __html: post.content.rendered\n      }\n    }));\n  }); // console.log(postList);\n\n  useEffect(function () {\n    var requestOptions1 = {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + data.token\n      } // body: { username: email, password:pass }\n      // body: formData\n\n    };\n    fetch('http://localhost/wp-json/wp/v2/users', requestOptions1) // test if token can be used on other api\n    .then(function (resf1) {\n      return resf1.json();\n    }) // necessary!\n    .then(function (data1) {\n      return console.log(data1);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n    return function () {\n      cleanup;\n    };\n  }, [input]);\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '80vw'\n    }\n  }, postList)); // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n  // constructor(props) => {\n  //   super(props)\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n  // fetchPosts = this.fetchPostsAsync\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n  // return <div>{postList}</div>\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n_s2(List, \"JpDeFLNXYSpBIDqajER2NML24b4=\", true);\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/list.js"],"names":["React","Component","useEffect","useState","useLayoutEffect","Link","styles","List","POSTS_SERVICE_URL","useFetch","url","options","response","setResponse","error","setError","fetchData","fetch","res","json","console","log","data","postList","map","post","index","postContainer","id","title","rendered","status","contentStyle","__html","content","requestOptions1","method","headers","token","then","resf1","data1","err","cleanup","input","display","justifyContent","alignItems","width"],"mappings":"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,MAAAA,UAAU,EAAE;AAFb;AAAZ,KAGE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACGzB,QADH,CAHF,CAAR,CAvD6B,CA+D7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IA3KwBhB,I;;KAAAA,I","sourcesContent":["import React, { Component, useEffect, useState, useLayoutEffect } from 'react';\nimport Link from 'next/link'\nimport styles from '../styles/List.module.css'\n\n\nexport default function List() {\n  const POSTS_SERVICE_URL = 'http://localhost:80/wp-json/wp/v2/posts';\n\n  const useFetch = (url, options) => {\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    React.useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n          console.log(error)\n        }\n      };\n      fetchData();\n  }, []);\n  return { response, error };\n  };\n\n  const res = useFetch(POSTS_SERVICE_URL, {});\n  if (!res.response) {\n    return <div>Loading...</div>\n  }\n  const data = res.response\n  // console.log(\"from list.js\")\n  console.log(data)\n  const postList = data.map((post, index) =>\n      <div className={styles.postContainer} key={post.id}>\n        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n          <a postdata={`${post}`}>\n            <h2>Title: {post.title.rendered}</h2></a></Link>\n        <p>Status: {post.status}</p>\n        <div className={`text-container ${styles.contentStyle}`} dangerouslySetInnerHTML={{ __html: post.content.rendered }} />\n      </div>)\n  // console.log(postList);\n\n  useEffect(() => {\n    const requestOptions1 = {\n      method: 'GET',\n      headers: { 'Authorization': 'Bearer ' + data.token },\n      // body: { username: email, password:pass }\n        // body: formData\n      };\n    fetch('http://localhost/wp-json/wp/v2/users',requestOptions1) \n    // test if token can be used on other api\n      .then(resf1 => resf1.json()) // necessary!\n      .then(data1 => console.log(data1))\n      .catch(err  => console.log(err))\n    return () => {\n      cleanup\n    }\n  }, [input])\n  return (<div style={{display: 'flex',\n                       justifyContent: 'center',\n                       alignItems: 'center'}}>\n            <div style={{width:'80vw'}}>\n              {postList}\n            </div>\n          </div>)\n\n  // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n\n  // constructor(props) => {\n  //   super(props)\n\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n\n  // fetchPosts = this.fetchPostsAsync\n\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n\n  // return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}