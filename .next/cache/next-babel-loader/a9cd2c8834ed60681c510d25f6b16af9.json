{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useRef } from 'react'; // import styles from './AddTeam.module.css'\n\nimport useInput from 'client/hooks/useInput';\nimport { useToasts } from 'react-toast-notifications';\n\nfunction AddForm(props) {\n  const inputRef = useRef(null);\n  const [name, bindName, resetName] = useInput('');\n  const [city, bindCity, resetCity] = useInput('');\n  const [state, bindState, resetState] = useInput('');\n  const [stadium, bindStadium, resetStadium] = useInput('');\n  const [pic, bindPic, resetPic] = useInput('');\n  const {\n    addToast\n  } = useToasts();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(name);\n    console.log(city);\n    console.log(state);\n    console.log(stadium);\n    console.log(pic);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        team_name: name,\n        team_city: city,\n        team_state: state,\n        team_stadium: stadium,\n        team_pic: pic\n      })\n    };\n    fetch(\"http://localhost/wp-json/custom/teams\", requestOptions).then(resf => resf.json()) // necessary!\n    .then(data => {\n      console.log(data);\n      props.doRerender();\n      resetName('');\n      resetCity('');\n      resetState('');\n      resetStadium('');\n      resetPic('');\n      addToast('Add team successfully!', {\n        appearance: 'success',\n        autoDismiss: true\n      });\n    }).catch(errf => {\n      console.log('errf=');\n      console.log(errf);\n    });\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  return __jsx(\"form\", {\n    onSubmit: submitHandler\n  }, __jsx(\"br\", null), __jsx(\"label\", {\n    className: (styles.formOptions, styles.firstOption)\n  }, \"Team's Name:\", __jsx(\"br\", null), __jsx(\"input\", _extends({}, bindName, {\n    className: styles.formTextarea,\n    type: \"text\",\n    ref: inputRef\n  }))), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.formOptions\n  }, \"Team's City:\", __jsx(\"br\", null), __jsx(\"input\", _extends({}, bindCity, {\n    className: styles.formTextarea,\n    type: \"text\"\n  }))), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.formOptions\n  }, \"Team's State:\", __jsx(\"br\", null), __jsx(\"input\", _extends({}, bindState, {\n    className: styles.formTextarea,\n    type: \"text\"\n  }))), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.formOptions\n  }, \"Team's Stadium:\", __jsx(\"br\", null), __jsx(\"input\", _extends({}, bindStadium, {\n    className: styles.formTextarea,\n    type: \"text\"\n  }))), __jsx(\"br\", null), __jsx(\"label\", {\n    className: styles.formOptions\n  }, \"Team's Picture:\", __jsx(\"br\", null), __jsx(\"input\", _extends({}, bindPic, {\n    className: styles.formTextarea,\n    type: \"text\"\n  }))), __jsx(\"br\", null), __jsx(\"button\", {\n    className: styles.formButton\n  }, \"Submit\"));\n}\n\nexport default AddForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/teamsAndPlayers/AddTeam.js"],"names":["React","useEffect","useState","useRef","useInput","useToasts","AddForm","props","inputRef","name","bindName","resetName","city","bindCity","resetCity","state","bindState","resetState","stadium","bindStadium","resetStadium","pic","bindPic","resetPic","addToast","submitHandler","e","preventDefault","console","log","requestOptions","method","headers","body","JSON","stringify","team_name","team_city","team_state","team_stadium","team_pic","fetch","then","resf","json","data","doRerender","appearance","autoDismiss","catch","errf","current","focus","styles","formOptions","firstOption","formTextarea","formButton"],"mappings":"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","sourcesContent":["import React,{useEffect, useState, useRef} from 'react'\n// import styles from './AddTeam.module.css'\nimport useInput from 'client/hooks/useInput'\nimport { useToasts } from 'react-toast-notifications'\n\nfunction AddForm(props) {\n  const inputRef = useRef(null)\n  const [name, bindName, resetName] = useInput('')\n  const [city, bindCity, resetCity] = useInput('')\n  const [state, bindState, resetState] = useInput('')\n  const [stadium, bindStadium, resetStadium] = useInput('')\n  const [pic, bindPic, resetPic] = useInput('')\n  const { addToast } = useToasts()\n  \n  const submitHandler = e => {\n    e.preventDefault()\n    console.log(name)\n    console.log(city)\n    console.log(state)\n    console.log(stadium)\n    console.log(pic)\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ team_name: name,\n                             team_city: city,\n                             team_state: state, \n                             team_stadium: stadium,\n                             team_pic: pic})\n    };\n    fetch(\"http://localhost/wp-json/custom/teams\", requestOptions)\n    .then(resf => resf.json()) // necessary!\n    .then(data => {\n        console.log(data)\n        props.doRerender()\n        resetName('')\n        resetCity('')\n        resetState('')\n        resetStadium('')\n        resetPic('')\n        addToast('Add team successfully!', {appearance: 'success',autoDismiss: true,})\n      })\n    .catch(errf => {\n      console.log('errf=')\n      console.log(errf)\n    })\n  }\n\n  useEffect(() =>{\n    inputRef.current.focus()\n  },[])\n\n  return (\n      <form onSubmit={submitHandler}>\n        <br/><label className={styles.formOptions, styles.firstOption}>Team's Name:<br/>\n          <input {...bindName} className={styles.formTextarea} type=\"text\" ref={inputRef}/></label><br/>\n        <label className={styles.formOptions}>Team's City:<br/>\n          <input {...bindCity} className={styles.formTextarea} type=\"text\"/></label><br/>\n        <label className={styles.formOptions}>Team's State:<br/>\n          <input {...bindState} className={styles.formTextarea} type=\"text\"/></label><br/>\n        <label className={styles.formOptions}>Team's Stadium:<br/>\n          <input {...bindStadium} className={styles.formTextarea} type=\"text\"/></label><br/>\n        <label className={styles.formOptions}>Team's Picture:<br/>\n          <input {...bindPic} className={styles.formTextarea} type=\"text\"/></label><br/>\n        <button className={styles.formButton}>Submit</button>\n      </form>\n  )\n}\n\nexport default AddForm\n"]},"metadata":{},"sourceType":"module"}