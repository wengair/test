{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState, useLayoutEffect } from 'react';\nimport Link from 'next/link';\nimport styles from '../styles/List.module.css';\nexport default function List() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var postsUrl = process.env.getPostsUrl;\n\n  var useFetch = function useFetch(url, options) {\n    _s();\n\n    var _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        response = _React$useState2[0],\n        setResponse = _React$useState2[1];\n\n    var _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        error = _React$useState4[0],\n        setError = _React$useState4[1];\n\n    React.useEffect(function () {\n      var fetchData = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _res, json;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return fetch(url, options);\n\n                case 3:\n                  _res = _context.sent;\n                  _context.next = 6;\n                  return _res.json();\n\n                case 6:\n                  json = _context.sent;\n                  setResponse(json);\n                  _context.next = 14;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](0);\n                  setError(_context.t0);\n                  console.log(_context.t0);\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 10]]);\n        }));\n\n        return function fetchData() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchData();\n    }, []);\n    return {\n      response: response,\n      error: error\n    };\n  };\n\n  _s(useFetch, \"92kGcqJmUZHxj5g8slhrA1SfVKo=\");\n\n  var res = useFetch(postsUrl, {});\n\n  if (!res.response) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  var data = res.response; // console.log(\"from list.js\")\n  // console.log(data)\n\n  var postList = data.map(function (post, index) {\n    return __jsx(\"div\", {\n      className: styles.postContainer,\n      key: post.id\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id)\n    }, __jsx(\"a\", null, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"div\", {\n      className: \"text-container \".concat(styles.contentStyle),\n      dangerouslySetInnerHTML: {\n        __html: post.content.rendered\n      }\n    }));\n  }); // console.log(postList);\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '80vw'\n    }\n  }, postList), __jsx(Link, {\n    href: \"/hahaha\",\n    as: \"/hahaha\"\n  }, __jsx(\"a\", null, \"Edit\")));\n}\n\n_s2(List, \"y8uEuLFgqaPXQxYUFOLsMqh7FtE=\", true);\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/list.js"],"names":["React","Component","useEffect","useState","useLayoutEffect","Link","styles","List","postsUrl","process","env","getPostsUrl","useFetch","url","options","response","setResponse","error","setError","fetchData","fetch","res","json","console","log","data","postList","map","post","index","postContainer","id","title","rendered","status","contentStyle","__html","content","display","justifyContent","alignItems","width"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useLayoutEffect } from 'react'\nimport Link from 'next/link'\nimport styles from '../styles/List.module.css'\n\n\nexport default function List() {\n  const postsUrl = process.env.getPostsUrl\n\n  const useFetch = (url, options) => {\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    React.useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n          console.log(error)\n        }\n      };\n      fetchData();\n  }, []);\n  return { response, error };\n  };\n\n  const res = useFetch(postsUrl, {});\n  if (!res.response) {\n    return <div>Loading...</div>\n  }\n\n  const data = res.response\n  // console.log(\"from list.js\")\n  // console.log(data)\n  const postList = data.map((post, index) =>\n      <div className={styles.postContainer} key={post.id}>\n        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n          <a>\n            <h2>Title: {post.title.rendered}</h2></a></Link>\n        <p>Status: {post.status}</p>\n        <div className={`text-container ${styles.contentStyle}`} dangerouslySetInnerHTML={{ __html: post.content.rendered }} />\n      </div>)\n  // console.log(postList);\n\n  return (<div style={{display: 'flex',\n                       justifyContent: 'center',\n                       alignItems: 'center'}}>\n            <div style={{width:'80vw'}}>\n              {postList}\n            </div>\n            <Link href=\"/hahaha\" as='/hahaha'><a>Edit</a></Link>\n          </div>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}