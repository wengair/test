{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport ListLists from './listlists';\nvar POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\nexport default function List() {\n  var _this = this;\n\n  state = {\n    // Initial state.\n    isFetching: false,\n    posts: []\n  };\n\n  componentDidMount = function componentDidMount() {\n    _this.fetchPosts();\n  };\n\n  var fetchPostsAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                isFetching: true\n              })); // Sets loading state.\n\n\n              _context.next = 4;\n              return axios.get(POSTS_SERVICE_URL);\n\n            case 4:\n              response = _context.sent;\n\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                isFetching: false,\n                posts: response.data\n              }));\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                isFetching: false\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fetchPostsAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  fetchPosts = this.fetchPostsAsync;\n  var postList = this.state.posts.map(function (post) {\n    return __jsx(\"div\", null, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id)\n    }, __jsx(\"a\", {\n      key: post.id,\n      postData: \"\".concat(post)\n    }, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"p\", null, \"Content: \", post.content.rendered));\n  });\n  return __jsx(\"div\", null, postList);\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","Link","axios","ListLists","POSTS_SERVICE_URL","List","state","isFetching","posts","componentDidMount","fetchPosts","fetchPostsAsync","setState","get","response","data","console","log","postList","map","post","id","title","rendered","status","content"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,iBAAiB,GAAG,kCAA1B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7BC,EAAAA,KAAK,GAAG;AACN;AACAC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAAR;;AAOAC,EAAAA,iBAAiB,GAAG,6BAAM;AACxB,IAAA,KAAI,CAACC,UAAL;AACD,GAFD;;AAIA,MAAIC,eAAe;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAElB,cAAA,KAAI,CAACC,QAAL,iCAAmB,KAAI,CAACN,KAAxB;AAA+BC,gBAAAA,UAAU,EAAE;AAA3C,kBAFkB,CAEkC;;;AAFlC;AAAA,qBAGKL,KAAK,CAACW,GAAN,CAAUT,iBAAV,CAHL;;AAAA;AAGZU,cAAAA,QAHY;;AAIlB,cAAA,KAAI,CAACF,QAAL,iCACK,KAAI,CAACN,KADV;AAEEC,gBAAAA,UAAU,EAAE,KAFd;AAGEC,gBAAAA,KAAK,EAAEM,QAAQ,CAACC;AAHlB;;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAUlBC,cAAAA,OAAO,CAACC,GAAR;;AACA,cAAA,KAAI,CAACL,QAAL,iCAAmB,KAAI,CAACN,KAAxB;AAA+BC,gBAAAA,UAAU,EAAE;AAA3C;;AAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfI,eAAe;AAAA;AAAA;AAAA,KAAnB;;AAeAD,EAAAA,UAAU,GAAG,KAAKC,eAAlB;AAEA,MAAMO,QAAQ,GAAG,KAAKZ,KAAL,CAAWE,KAAX,CAAiBW,GAAjB,CAAqB,UAAAC,IAAI;AAAA,WACtC,mBACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYA,IAAI,CAACC,EAAjB;AAA3B,OACE;AAAG,MAAA,GAAG,EAAED,IAAI,CAACC,EAAb;AAAiB,MAAA,QAAQ,YAAKD,IAAL;AAAzB,OACE,6BAAYA,IAAI,CAACE,KAAL,CAAWC,QAAvB,CADF,CADF,CADF,EAIE,6BAAYH,IAAI,CAACI,MAAjB,CAJF,EAKE,8BAAaJ,IAAI,CAACK,OAAL,CAAaF,QAA1B,CALF,CADsC;AAAA,GAAzB,CAAjB;AASA,SAAO,mBAAML,QAAN,CAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAxEwBb,I","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link'\nimport axios from 'axios';\nimport ListLists from './listlists'\n\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n\nexport default function List() {\n  state = {\n    // Initial state.\n    isFetching: false,\n    posts: []\n  }\n\n\n  componentDidMount = () => {\n    this.fetchPosts()\n  }\n\n  let fetchPostsAsync = async() => {\n    try {\n      this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n      const response = await axios.get(POSTS_SERVICE_URL);\n      this.setState({\n        ...this.state,\n        isFetching: false,\n        posts: response.data\n      });\n    } catch (e) {\n      console.log(e);\n      this.setState({ ...this.state, isFetching: false });\n    }\n  }\n\n  fetchPosts = this.fetchPostsAsync\n\n  const postList = this.state.posts.map(post =>\n      <div>\n        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n          <a key={post.id} postData={`${post}`}>\n            <h2>Title: {post.title.rendered}</h2></a></Link>\n        <p>Status: {post.status}</p>\n        <p>Content: {post.content.rendered}</p>\n      </div>)\n\n  return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}