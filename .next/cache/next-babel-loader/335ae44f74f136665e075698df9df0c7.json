{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport ListLists from './listlists';\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts'; // export default function List() {\n// const [data, setData] = useState({ posts: []});\n// // console.log(data);\n// useEffect(() => {\n//   // console.log(\"in useEffect\");\n//   const fetchUsers = async () => {\n//     // console.log(POSTS_SERVICE_URL);\n//     const response = await axios.get(POSTS_SERVICE_URL);\n//     setData(response.data);\n//     // console.log(response);\n//   };\n//   // console.log(\"finish function setup\");\n//   fetchUsers();\n//   // console.log(\"run the function\");\n// }, []); // Runs once\n// useEffect(() => {\n//   const fetchUsers = async () => {\n//     try {\n//       console.log(POSTS_SERVICE_URL);\n//       setData({ ...data, isFetching: true });\n//       const response = await axios.get(POSTS_SERVICE_URL);\n//       setData({\n//         ...data,\n//         posts: response.data,\n//         isFetching: false\n//       });\n//     } catch (e) {\n//       console.log(e);\n//       setData({ ...data, isFetching: false });\n//     }\n//   };\n//   fetchUsers();\n// }, []); // Runs once\n// constructor(props) => {\n//   super(props)\n//   this.state = {\n//     isFetching: false,\n//     posts: []\n//   }\n// }\n// componentDidMount = () => {\n//   this.fetchPosts()\n// }\n// let fetchPostsAsync = async() => {\n//   try {\n//     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n//     const response = await axios.get(POSTS_SERVICE_URL);\n//     this.setState({\n//       ...this.state,\n//       isFetching: false,\n//       posts: response.data\n//     });\n//   } catch (e) {\n//     console.log(e);\n//     this.setState({ ...this.state, isFetching: false });\n//   }\n// }\n// fetchPosts = this.fetchPostsAsync\n//   console.log(data);\n//   console.log(data.posts);\n//   const postList = data.posts.map(post =>\n//       <div>\n//         <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//           <a key={post.id} postData={`${post}`}>\n//             <h2>Title: {post.title.rendered}</h2></a></Link>\n//         <p>Status: {post.status}</p>\n//         <p>Content: {post.content.rendered}</p>\n//       </div>)\n//   console.log(postList);\n//   return <div>{postList}</div>\n// }\n// Next.js\n\nconst List = ({\n  posts\n}) => {\n  const postList = posts.map(post => __jsx(\"div\", null, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`\n  }, __jsx(\"a\", {\n    key: post.id,\n    postData: `${post}`\n  }, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"p\", null, \"Content: \", post.content.rendered)));\n  return __jsx(\"div\", null, postList);\n}; // Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://wp:80/wp-json/wp/v2/posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","useEffect","useState","axios","Link","ListLists","POSTS_SERVICE_URL","List","posts","postList","map","post","id","title","rendered","status","content","getStaticProps","res","fetch","json","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,iBAAiB,GAAG,kCAA1B,C,CAEA;AAEE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAC7B,mBACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG;AAA/C,KACE;AAAG,IAAA,GAAG,EAAED,IAAI,CAACC,EAAb;AAAiB,IAAA,QAAQ,EAAG,GAAED,IAAK;AAAnC,KACE,6BAAYA,IAAI,CAACE,KAAL,CAAWC,QAAvB,CADF,CADF,CADF,EAIE,6BAAYH,IAAI,CAACI,MAAjB,CAJF,EAKE,8BAAaJ,IAAI,CAACK,OAAL,CAAaF,QAA1B,CALF,CADe,CAAjB;AAQA,SAAO,mBAAML,QAAN,CAAP;AACD,CAVD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeQ,cAAf,GAAgC;AACrC;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAAvB;AACA,QAAMX,KAAK,GAAG,MAAMU,GAAG,CAACE,IAAJ,EAApB,CAHqC,CAKrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLb,MAAAA;AADK;AADF,GAAP;AAKD","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link'\nimport ListLists from './listlists'\n\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n\n// export default function List() {\n\n  // const [data, setData] = useState({ posts: []});\n  // // console.log(data);\n\n  // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n\n  // constructor(props) => {\n  //   super(props)\n\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n\n  // fetchPosts = this.fetchPostsAsync\n\n//   console.log(data);\n//   console.log(data.posts);\n//   const postList = data.posts.map(post =>\n//       <div>\n//         <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//           <a key={post.id} postData={`${post}`}>\n//             <h2>Title: {post.title.rendered}</h2></a></Link>\n//         <p>Status: {post.status}</p>\n//         <p>Content: {post.content.rendered}</p>\n//       </div>)\n//   console.log(postList);\n\n//   return <div>{postList}</div>\n// }\n// Next.js\nconst List = ({ posts }) => {\n  const postList = posts.map(post =>\n    <div>\n      <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n        <a key={post.id} postData={`${post}`}>\n          <h2>Title: {post.title.rendered}</h2></a></Link>\n      <p>Status: {post.status}</p>\n      <p>Content: {post.content.rendered}</p>\n    </div>)\n  return <div>{postList}</div>\n}\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n  const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts,\n    },\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}