{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useRef, useEffect } from 'react';\nimport styles from 'pages/posts/[id]d/node_modules/client/styles/Edit.module.css';\nimport { UserContext } from 'pages/_app';\nimport useInput from 'client/hooks/useInput';\n\nfunction Hahaha(_ref) {\n  var post = _ref.post;\n  // const inputRef = useRef(null)\n  // const userContext = useContext(UserContext)\n  // const [title, bindTitle, resetTitle] = useInput('')\n  // const [content, bindContent, resetContent] = useInput('')\n  // const postsUrl = process.env.getPostsUrl\n  console.log('in hahaha'); // console.log(userContext.loginState)\n  // console.log('post=')\n  // console.log(post)\n  // const submitHandler = e => {\n  //   e.preventDefault()\n  //   const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   const updatePostUrl = postsUrl+`/${id}`\n  //   // ----------fetch version get token---------------\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n  //     body: JSON.stringify({ title: title, content:content })\n  //   };\n  //   fetch(postsUrl, requestOptions)\n  //   .then(resf => resf.json())\n  //   .then(data => {\n  //     if(data.token){\n  //       // success login\n  //       console.log(data)\n  //       userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n  //       localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n  //       Router.push('/')\n  //     } else {\n  //       // wrong information\n  //       userContext.loginDispatch({type:'error', error:'wrong email or password'})\n  //       resetEmail('')\n  //       resetPass('')\n  //     }\n  //   })\n  //   .catch(err => {\n  //     // other errors\n  //     userContext.loginDispatch({type:'error', error:err})\n  //   })\n  //   // ------------------------------------------------\n  //   console.log('haha')\n  // }\n  // useEffect(() => {\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   // console.log(window.location)\n  //   // console.log(id)\n  //   // console.log(postsUrl+`/${id}`)\n  //   fetch(postsUrl+`/${id}`)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       resetTitle(data.slug)\n  //       resetContent(data.excerpt.rendered)\n  //       // content = data.excerpt.rendered\n  //     })\n  //     .catch(err=>console.log(err))\n  //   return () => {\n  //     // cleanup\n  //   }\n  // }, [title,content])\n\n  return __jsx(\"div\", null, \"in hahaha\");\n}\n\n_c = Hahaha;\nexport default Hahaha;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hahaha\");","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/Hahaha.js"],"names":["React","useContext","useRef","useEffect","styles","UserContext","useInput","Hahaha","post","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,8DAAnB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,MAAT,OAAwB;AAAA,MAAPC,IAAO,QAAPA,IAAO;AACtB;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAPsB,CAQtB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,+BADF;AAKD;;KAvEQH,M;AAyET,eAAeA,MAAf","sourcesContent":["import React, {useContext, useRef,useEffect} from 'react'\nimport styles from 'pages/posts/[id]d/node_modules/client/styles/Edit.module.css'\nimport {UserContext} from 'pages/_app'\nimport useInput from 'client/hooks/useInput'\n\nfunction Hahaha({post}) {\n  // const inputRef = useRef(null)\n  // const userContext = useContext(UserContext)\n  // const [title, bindTitle, resetTitle] = useInput('')\n  // const [content, bindContent, resetContent] = useInput('')\n  // const postsUrl = process.env.getPostsUrl\n  \n  console.log('in hahaha')\n  // console.log(userContext.loginState)\n  \n  // console.log('post=')\n  // console.log(post)\n  \n  // const submitHandler = e => {\n  //   e.preventDefault()\n  //   const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   const updatePostUrl = postsUrl+`/${id}`\n  //   // ----------fetch version get token---------------\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n  //     body: JSON.stringify({ title: title, content:content })\n  //   };\n  //   fetch(postsUrl, requestOptions)\n  //   .then(resf => resf.json())\n  //   .then(data => {\n  //     if(data.token){\n  //       // success login\n  //       console.log(data)\n  //       userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n  //       localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n  //       Router.push('/')\n  //     } else {\n  //       // wrong information\n  //       userContext.loginDispatch({type:'error', error:'wrong email or password'})\n  //       resetEmail('')\n  //       resetPass('')\n  //     }\n  //   })\n  //   .catch(err => {\n  //     // other errors\n  //     userContext.loginDispatch({type:'error', error:err})\n  //   })\n  //   // ------------------------------------------------\n  //   console.log('haha')\n  // }\n  // useEffect(() => {\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   // console.log(window.location)\n  //   // console.log(id)\n  //   // console.log(postsUrl+`/${id}`)\n  //   fetch(postsUrl+`/${id}`)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       resetTitle(data.slug)\n  //       resetContent(data.excerpt.rendered)\n  //       // content = data.excerpt.rendered\n  //     })\n  //     .catch(err=>console.log(err))\n  //   return () => {\n  //     // cleanup\n  //   }\n  // }, [title,content])\n\n  return (\n    <div>\n      in hahaha\n    </div>\n  )\n}\n\nexport default Hahaha\n"]},"metadata":{},"sourceType":"module"}