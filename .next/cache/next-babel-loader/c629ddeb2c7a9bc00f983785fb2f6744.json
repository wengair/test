{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useRef, useEffect } from 'react';\nimport styles from 'client/styles/Edit.module.css';\nimport { UserContext } from 'pages/_app';\nimport useInput from 'client/hooks/useInput';\n\nfunction edit(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var inputRef = useRef(null);\n  var userContext = useContext(UserContext);\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      title = _useInput2[0],\n      bindTitle = _useInput2[1],\n      resetTitle = _useInput2[2];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 3),\n      content = _useInput4[0],\n      bindContent = _useInput4[1],\n      resetContent = _useInput4[2];\n\n  var postsUrl = process.env.getPostsUrl;\n  console.log('in edit');\n  console.log(userContext.loginState); // console.log('post=')\n  // console.log(post)\n  // const submitHandler = e => {\n  //   e.preventDefault()\n  //   const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   const updatePostUrl = postsUrl+`/${id}`\n  //   // ----------fetch version get token---------------\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n  //     body: JSON.stringify({ title: title, content:content })\n  //   };\n  //   fetch(postsUrl, requestOptions)\n  //   .then(resf => resf.json())\n  //   .then(data => {\n  //     if(data.token){\n  //       // success login\n  //       console.log(data)\n  //       userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n  //       localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n  //       Router.push('/')\n  //     } else {\n  //       // wrong information\n  //       userContext.loginDispatch({type:'error', error:'wrong email or password'})\n  //       resetEmail('')\n  //       resetPass('')\n  //     }\n  //   })\n  //   .catch(err => {\n  //     // other errors\n  //     userContext.loginDispatch({type:'error', error:err})\n  //   })\n  //   // ------------------------------------------------\n  //   console.log('haha')\n  // }\n  // useEffect(() => {\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   // console.log(window.location)\n  //   // console.log(id)\n  //   // console.log(postsUrl+`/${id}`)\n  //   fetch(postsUrl+`/${id}`)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       resetTitle(data.slug)\n  //       resetContent(data.excerpt.rendered)\n  //       // content = data.excerpt.rendered\n  //     })\n  //     .catch(err=>console.log(err))\n  //   return () => {\n  //     // cleanup\n  //   }\n  // }, [title,content])\n\n  return __jsx(\"div\", {\n    className: \"formConatainer\"\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Title: \"), __jsx(\"input\", _extends({}, bindTitle, {\n    name: \"title\",\n    type: \"text\",\n    className: styles.formText,\n    ref: inputRef\n  }))), __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Content: \"), __jsx(\"textarea\", _extends({}, bindContent, {\n    name: \"content\",\n    type: \"textarea\",\n    className: styles.formTextArea\n  }))), __jsx(\"div\", {\n    style: {\n      height: '10px',\n      textAlign: 'center'\n    }\n  }, userContext.error && !email && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, \"Wrong email or password\")), __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\n_s(edit, \"XXKe5OP4avgu1b+R5zgy/ArXx8g=\", false, function () {\n  return [useInput, useInput];\n});\n\nexport default edit;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/[id]/edit.js"],"names":["React","useContext","useRef","useEffect","styles","UserContext","useInput","edit","post","inputRef","userContext","title","bindTitle","resetTitle","content","bindContent","resetContent","postsUrl","process","env","getPostsUrl","console","log","loginState","submitHandler","form","formOption","formLabel","formText","formTextArea","height","textAlign","error","email","color","formSubmit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,IAAT,OAAsB;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AACpB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AACA,MAAMQ,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;;AAFoB,kBAGmBC,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,MAGbK,KAHa;AAAA,MAGNC,SAHM;AAAA,MAGKC,UAHL;;AAAA,mBAIyBP,QAAQ,CAAC,EAAD,CAJjC;AAAA;AAAA,MAIbQ,OAJa;AAAA,MAIJC,WAJI;AAAA,MAISC,YAJT;;AAKpB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAW,CAACa,UAAxB,EARoB,CAUpB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,QAAQ,EAAEC,aAAhB;AAA+B,IAAA,SAAS,EAAEpB,MAAM,CAACqB;AAAjD,KACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB;AAAvB,KACE;AAAO,IAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAzB,eADF,EAEE,4BAAWf,SAAX;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,SAAS,EAAER,MAAM,CAACwB,QAAjE;AAA2E,IAAA,GAAG,EAAEnB;AAAhF,KAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACsB;AAAvB,KACE;AAAO,IAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAzB,iBADF,EAEE,+BAAcZ,WAAd;AAA2B,IAAA,IAAI,EAAC,SAAhC;AAA0C,IAAA,IAAI,EAAC,UAA/C;AAA0D,IAAA,SAAS,EAAEX,MAAM,CAACyB;AAA5E,KAFF,CALF,EASE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,SAAS,EAAC;AAAzB;AAAZ,KACGrB,WAAW,CAACsB,KAAZ,IAAqB,CAACC,KAAtB,IAA+B;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP;AAAb,+BADlC,CATF,EAYE;AAAQ,IAAA,SAAS,EAAE9B,MAAM,CAAC+B;AAA1B,cAZF,CADF,CADF;AAkBD;;GApFQ5B,I;UAGgCD,Q,EACMA,Q;;;AAkF/C,eAAeC,IAAf","sourcesContent":["import React, {useContext, useRef,useEffect} from 'react'\nimport styles from 'client/styles/Edit.module.css'\nimport {UserContext} from 'pages/_app'\nimport useInput from 'client/hooks/useInput'\n\nfunction edit({post}) {\n  const inputRef = useRef(null)\n  const userContext = useContext(UserContext)\n  const [title, bindTitle, resetTitle] = useInput('')\n  const [content, bindContent, resetContent] = useInput('')\n  const postsUrl = process.env.getPostsUrl\n  \n  console.log('in edit')\n  console.log(userContext.loginState)\n  \n  // console.log('post=')\n  // console.log(post)\n  \n  // const submitHandler = e => {\n  //   e.preventDefault()\n  //   const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   const updatePostUrl = postsUrl+`/${id}`\n  //   // ----------fetch version get token---------------\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n  //     body: JSON.stringify({ title: title, content:content })\n  //   };\n  //   fetch(postsUrl, requestOptions)\n  //   .then(resf => resf.json())\n  //   .then(data => {\n  //     if(data.token){\n  //       // success login\n  //       console.log(data)\n  //       userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n  //       localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n  //       Router.push('/')\n  //     } else {\n  //       // wrong information\n  //       userContext.loginDispatch({type:'error', error:'wrong email or password'})\n  //       resetEmail('')\n  //       resetPass('')\n  //     }\n  //   })\n  //   .catch(err => {\n  //     // other errors\n  //     userContext.loginDispatch({type:'error', error:err})\n  //   })\n  //   // ------------------------------------------------\n  //   console.log('haha')\n  // }\n  // useEffect(() => {\n  //   const id = Number(window.location.pathname.split(\"/\")[2])\n  //   // console.log(window.location)\n  //   // console.log(id)\n  //   // console.log(postsUrl+`/${id}`)\n  //   fetch(postsUrl+`/${id}`)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       resetTitle(data.slug)\n  //       resetContent(data.excerpt.rendered)\n  //       // content = data.excerpt.rendered\n  //     })\n  //     .catch(err=>console.log(err))\n  //   return () => {\n  //     // cleanup\n  //   }\n  // }, [title,content])\n\n  return (\n    <div className=\"formConatainer\">\n      <form onSubmit={submitHandler} className={styles.form}>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Title: </label>\n          <input {...bindTitle} name='title' type=\"text\" className={styles.formText} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Content: </label>\n          <textarea {...bindContent} name='content' type=\"textarea\" className={styles.formTextArea}/>\n        </div>\n        <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div>\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default edit\n"]},"metadata":{},"sourceType":"module"}