{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport useInput from 'client/hooks/useInput';\nimport { UserContext } from 'pages/index';\nimport Router from 'next/router';\nimport styles from '../styles/LoginForm.module.css';\n\nfunction LoginForm() {\n  const inputRef = useRef(null);\n  const [email, bindEmail, resetEmail] = useInput('');\n  const [pass, bindPass, resetPass] = useInput('');\n  const userContext = useContext(UserContext);\n  const toeknUrl = process.env.getTokenUrl;\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()).then(data => {\n      if (data.token) {\n        // success login\n        console.log(data);\n        userContext.loginDispatch({\n          type: 'login',\n          token: data.token,\n          mail: email,\n          pass: pass\n        });\n        Router.push('/');\n      } else {\n        // wrong information\n        userContext.loginDispatch({\n          type: 'error',\n          error: 'wrong email or password'\n        });\n        resetEmail('');\n        resetPass('');\n      }\n    }).catch(err => {\n      // other errors\n      userContext.loginDispatch({\n        type: 'error',\n        error: error\n      });\n    }); // ------------------------------------------------\n\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.formConatainer\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"E-mail: \"), __jsx(\"input\", _extends({}, bindEmail, {\n    type: \"text\",\n    className: styles.formTextarea,\n    ref: inputRef\n  }))), __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Password: \"), __jsx(\"input\", _extends({}, bindPass, {\n    type: \"password\",\n    className: styles.formTextarea\n  }))), __jsx(\"div\", {\n    style: {\n      height: '10px',\n      textAlign: 'center'\n    }\n  }, userContext.loginState.error && !email && __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, \"Wrong email or password\")), __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/LoginForm.js"],"names":["React","useContext","useRef","useEffect","useInput","UserContext","Router","styles","LoginForm","inputRef","email","bindEmail","resetEmail","pass","bindPass","resetPass","userContext","toeknUrl","process","env","getTokenUrl","submitHandler","e","requestOptions","method","headers","body","JSON","stringify","username","password","fetch","then","resf","json","data","token","console","log","loginDispatch","type","mail","push","error","catch","err","preventDefault","current","focus","formConatainer","form","formOption","formLabel","formTextarea","height","textAlign","loginState","color","formSubmit"],"mappings":"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","sourcesContent":["import React,{useContext, useRef, useEffect} from 'react'\nimport useInput from 'client/hooks/useInput'\nimport {UserContext} from 'pages/index'\nimport Router from 'next/router'\nimport styles from '../styles/LoginForm.module.css'\n\nfunction LoginForm() {\n  const inputRef = useRef(null)\n  const [email, bindEmail, resetEmail] = useInput('')\n  const [pass, bindPass, resetPass] = useInput('')\n  const userContext = useContext(UserContext)\n  const toeknUrl = process.env.getTokenUrl\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json())\n    .then(data => {\n      if(data.token){\n        // success login\n        console.log(data)\n        userContext.loginDispatch({type:'login', token:data.token, mail:email, pass:pass})\n        Router.push('/')\n      } else {\n        // wrong information\n        userContext.loginDispatch({type:'error', error:'wrong email or password'})\n        resetEmail('')\n        resetPass('')\n      }\n    })\n    .catch(err => {\n      // other errors\n      userContext.loginDispatch({type:'error', error:error})\n    })\n    // ------------------------------------------------\n    e.preventDefault()\n  }\n\n  useEffect(() =>{\n    inputRef.current.focus()\n  },[])\n\n  return (\n    <div className={styles.formConatainer}>\n      <form onSubmit={submitHandler} className={styles.form}>\n        \n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>E-mail: </label>\n          <input {...bindEmail} type=\"text\" className={styles.formTextarea} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Password: </label>\n          <input {...bindPass} type=\"password\" className={styles.formTextarea}/>\n        </div>\n        <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.loginState.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div>\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}