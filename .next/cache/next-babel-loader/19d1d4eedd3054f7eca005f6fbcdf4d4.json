{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport ListLists from './listlists';\nexport default function List() {\n  const POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n  const {\n    0: hasError,\n    1: setHasError\n  } = useState(false); // console.log(data);\n\n  useEffect(() => {\n    fetch(\"/api/data\").then(res => setState(res.data)).catch(err => setHasError(true));\n  }, []);\n  return __jsx(React.Fragment, null, hasError ? __jsx(\"div\", null, \"Error occured.\") : state.map(d => __jsx(\"div\", null, d))); // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n  // constructor(props) => {\n  //   super(props)\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n  // fetchPosts = this.fetchPostsAsync\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n  // return <div>{postList}</div>\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","useEffect","useState","axios","Link","ListLists","List","POSTS_SERVICE_URL","state","setState","hasError","setHasError","fetch","then","res","data","catch","err","map","d"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,iBAAiB,GAAG,kCAA1B;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAH6B,CAI7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACVW,IAAAA,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CACIC,GAAG,IAAIL,QAAQ,CAACK,GAAG,CAACC,IAAL,CADnB,EAEEC,KAFF,CAEQC,GAAG,IAAIN,WAAW,CAAC,IAAD,CAF1B;AAGH,GAJM,EAIJ,EAJI,CAAT;AAMA,SACM,4BACKD,QAAQ,GAAE,oCAAF,GAA+BF,KAAK,CAACU,GAAN,CAAWC,CAAC,IAAI,mBAAMA,CAAN,CAAhB,CAD5C,CADN,CAX6B,CAgB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link'\nimport ListLists from './listlists'\n\n\nexport default function List() {\n  const POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n  const [state, setState] = useState([]);\n  const [hasError, setHasError] = useState(false)\n  // console.log(data);\n  useEffect(() => {\n        fetch(\"/api/data\").then(\n            res => setState(res.data)\n        ).catch(err => setHasError(true))\n    }, [])\n\n  return (\n        <>\n            {hasError? <div>Error occured.</div> : (state.map( d => <div>{d}</div>))}\n        </>\n  )\n  // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n\n  // constructor(props) => {\n  //   super(props)\n\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n\n  // fetchPosts = this.fetchPostsAsync\n\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n\n  // return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}