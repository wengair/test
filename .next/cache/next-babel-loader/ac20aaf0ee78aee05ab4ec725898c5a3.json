{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport useInput from 'client/hooks/useInput';\nimport { UserContext } from 'pages/index';\nimport Router from 'next/router';\nimport styles from '../styles/LoginForm.module.css';\n\nfunction LoginForm() {\n  const inputRef = useRef(null);\n  const [email, bindEmail, resetEmail] = useInput('');\n  const [pass, bindPass, resetPass] = useInput('');\n  const userContext = useContext(UserContext);\n  const toeknUrl = process.env.getTokenUrl;\n  const localStorageRef = localStorage.getItem('userInfo');\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()).then(data => {\n      if (data.token) {\n        // success login\n        console.log(data);\n        userContext.loginDispatch({\n          type: 'login',\n          token: data.token,\n          mail: data.user_display_name,\n          pass: pass,\n          id: data.id\n        });\n        localStorage.setItem('userInfo', JSON.stringify({\n          name: data.user_display_name,\n          token: data.token\n        }));\n        Router.push('/');\n      } else {\n        // wrong information\n        userContext.loginDispatch({\n          type: 'error',\n          error: 'wrong email or password'\n        });\n        resetEmail('');\n        resetPass('');\n      }\n    }).catch(err => {\n      // other errors\n      userContext.loginDispatch({\n        type: 'error',\n        error: error\n      });\n    }); // ------------------------------------------------\n\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  if (localStorageRef) {\n    const requestOptions1 = {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + localStorageRef.token\n      } // body: { username: email, password:pass }\n      // body: formData\n\n    };\n    fetch('http://localhost/wp-json/wp/v2/users/me', requestOptions1) // test if token can be used on other api\n    .then(resf1 => resf1.json()) // necessary!\n    .then(data1 => console.log(data1)).catch(err => console.log(err));\n  } else {\n    return __jsx(\"div\", {\n      className: styles.formConatainer\n    }, __jsx(\"form\", {\n      onSubmit: submitHandler,\n      className: styles.form\n    }, __jsx(\"div\", {\n      className: styles.formOption\n    }, __jsx(\"label\", {\n      className: styles.formLabel\n    }, \"E-mail: \"), __jsx(\"input\", _extends({}, bindEmail, {\n      type: \"text\",\n      className: styles.formTextarea,\n      ref: inputRef\n    }))), __jsx(\"div\", {\n      className: styles.formOption\n    }, __jsx(\"label\", {\n      className: styles.formLabel\n    }, \"Password: \"), __jsx(\"input\", _extends({}, bindPass, {\n      type: \"password\",\n      className: styles.formTextarea\n    }))), __jsx(\"div\", {\n      style: {\n        height: '10px',\n        textAlign: 'center'\n      }\n    }, userContext.loginState.error && !email && __jsx(\"span\", {\n      style: {\n        color: 'red'\n      }\n    }, \"Wrong email or password\")), __jsx(\"button\", {\n      className: styles.formSubmit\n    }, \"Submit\")));\n  }\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/LoginForm.js"],"names":["React","useContext","useRef","useEffect","useInput","UserContext","Router","styles","LoginForm","inputRef","email","bindEmail","resetEmail","pass","bindPass","resetPass","userContext","toeknUrl","process","env","getTokenUrl","localStorageRef","localStorage","getItem","submitHandler","e","requestOptions","method","headers","body","JSON","stringify","username","password","fetch","then","resf","json","data","token","console","log","loginDispatch","type","mail","user_display_name","id","setItem","name","push","error","catch","err","preventDefault","current","focus","requestOptions1","resf1","data1","formConatainer","form","formOption","formLabel","formTextarea","height","textAlign","loginState","color","formSubmit"],"mappings":"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","sourcesContent":["import React,{useContext, useRef, useEffect} from 'react'\nimport useInput from 'client/hooks/useInput'\nimport {UserContext} from 'pages/index'\nimport Router from 'next/router'\nimport styles from '../styles/LoginForm.module.css'\n\nfunction LoginForm() {\n  const inputRef = useRef(null)\n  const [email, bindEmail, resetEmail] = useInput('')\n  const [pass, bindPass, resetPass] = useInput('')\n  const userContext = useContext(UserContext)\n  const toeknUrl = process.env.getTokenUrl\n  const localStorageRef = localStorage.getItem('userInfo')\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json())\n    .then(data => {\n      if(data.token){\n        // success login\n        console.log(data)\n        userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n        localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n        Router.push('/')\n      } else {\n        // wrong information\n        userContext.loginDispatch({type:'error', error:'wrong email or password'})\n        resetEmail('')\n        resetPass('')\n      }\n    })\n    .catch(err => {\n      // other errors\n      userContext.loginDispatch({type:'error', error:error})\n    })\n    // ------------------------------------------------\n    e.preventDefault()\n  }\n\n  useEffect(() =>{\n    inputRef.current.focus()\n  },[])\n\n  if(localStorageRef){\n    const requestOptions1 = {\n      method: 'GET',\n      headers: { 'Authorization': 'Bearer ' + localStorageRef.token },\n      // body: { username: email, password:pass }\n        // body: formData\n      };\n    fetch('http://localhost/wp-json/wp/v2/users/me',requestOptions1) \n    // test if token can be used on other api\n      .then(resf1 => resf1.json()) // necessary!\n      .then(data1 => console.log(data1))\n      .catch(err  => console.log(err))\n  } else {\n    return (\n      <div className={styles.formConatainer}>\n        <form onSubmit={submitHandler} className={styles.form}>\n          \n          <div className={styles.formOption}>\n            <label className={styles.formLabel}>E-mail: </label>\n            <input {...bindEmail} type=\"text\" className={styles.formTextarea} ref={inputRef}/>\n          </div>\n          <div className={styles.formOption}>\n            <label className={styles.formLabel}>Password: </label>\n            <input {...bindPass} type=\"password\" className={styles.formTextarea}/>\n          </div>\n          <div style={{height:'10px',textAlign:'center'}}>\n            {userContext.loginState.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n          </div>\n          <button className={styles.formSubmit}>Submit</button>\n        </form>\n      </div>\n    )}\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}