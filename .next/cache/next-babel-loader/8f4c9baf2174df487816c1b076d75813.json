{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport styles from 'client/styles/Edit.module.css';\nimport { UserContext } from 'pages/_app';\nimport useInput from 'client/hooks/useInput';\n\nfunction Edit({\n  post\n}) {\n  const inputRef = useRef(null);\n  const userContext = useContext(UserContext);\n  const [title, bindTitle, resetTitle] = useInput('');\n  const [content, bindContent, resetContent] = useInput('');\n  const postsUrl = process.env.getPostsUrl;\n  console.log('in edit');\n  console.log(userContext.loginState); // console.log('post=')\n  // console.log(post)\n\n  const submitHandler = e => {\n    const localStorageRef = JSON.parse(localStorage.getItem('userInfo')); // ----------fetch version get token---------------\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()).then(data => {\n      if (data.token) {\n        // success login\n        console.log(data);\n        userContext.loginDispatch({\n          type: 'login',\n          token: data.token,\n          mail: data.user_display_name,\n          pass: pass,\n          id: data.id\n        });\n        localStorage.setItem('userInfo', JSON.stringify({\n          name: data.user_display_name,\n          token: data.token\n        }));\n        Router.push('/');\n      } else {\n        // wrong information\n        userContext.loginDispatch({\n          type: 'error',\n          error: 'wrong email or password'\n        });\n        resetEmail('');\n        resetPass('');\n      }\n    }).catch(err => {\n      // other errors\n      userContext.loginDispatch({\n        type: 'error',\n        error: err\n      });\n    }); // ------------------------------------------------\n\n    e.preventDefault();\n    console.log('haha');\n  };\n\n  useEffect(() => {\n    console.log(window.location);\n    const id = Number(window.location.pathname.split(\"/\")[2]);\n    console.log(id);\n    console.log(postsUrl + `/${id}`);\n    fetch(postsUrl + `/${id}`).then(res => res.json()).then(data => {\n      console.log(data);\n      resetTitle(data.slug);\n      resetContent(data.excerpt.rendered); // content = data.excerpt.rendered\n    }).catch(err => console.log(err));\n    return () => {// cleanup\n    };\n  }, [title, content]);\n  return __jsx(\"div\", {\n    className: \"formConatainer\"\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Title: \"), __jsx(\"input\", _extends({}, bindTitle, {\n    name: \"title\",\n    type: \"text\",\n    className: styles.formText,\n    ref: inputRef\n  }))), __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Content: \"), __jsx(\"textarea\", _extends({}, bindContent, {\n    name: \"content\",\n    type: \"textarea\",\n    className: styles.formTextArea\n  }))), __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\nexport default Edit;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/[id]/Edit.js"],"names":["React","useContext","useRef","useEffect","styles","UserContext","useInput","Edit","post","inputRef","userContext","title","bindTitle","resetTitle","content","bindContent","resetContent","postsUrl","process","env","getPostsUrl","console","log","loginState","submitHandler","e","localStorageRef","JSON","parse","localStorage","getItem","requestOptions","method","headers","body","stringify","username","email","password","pass","fetch","toeknUrl","then","resf","json","data","token","loginDispatch","type","mail","user_display_name","id","setItem","name","Router","push","error","resetEmail","resetPass","catch","err","preventDefault","window","location","Number","pathname","split","res","slug","excerpt","rendered","form","formOption","formLabel","formText","formTextArea","formSubmit"],"mappings":"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","sourcesContent":["import React, {useContext, useRef,useEffect} from 'react'\nimport styles from 'client/styles/Edit.module.css'\nimport {UserContext} from 'pages/_app'\nimport useInput from 'client/hooks/useInput'\n\nfunction Edit({post}) {\n  const inputRef = useRef(null)\n  const userContext = useContext(UserContext)\n  const [title, bindTitle, resetTitle] = useInput('')\n  const [content, bindContent, resetContent] = useInput('')\n  const postsUrl = process.env.getPostsUrl\n\n\n  console.log('in edit')\n  console.log(userContext.loginState)\n  \n  // console.log('post=')\n  // console.log(post)\n\n  const submitHandler = e => {\n    const localStorageRef = JSON.parse(localStorage.getItem('userInfo'))\n    // ----------fetch version get token---------------\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json())\n    .then(data => {\n      if(data.token){\n        // success login\n        console.log(data)\n        userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n        localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n        Router.push('/')\n      } else {\n        // wrong information\n        userContext.loginDispatch({type:'error', error:'wrong email or password'})\n        resetEmail('')\n        resetPass('')\n      }\n    })\n    .catch(err => {\n      // other errors\n      userContext.loginDispatch({type:'error', error:err})\n    })\n    // ------------------------------------------------\n    e.preventDefault()\n    console.log('haha')\n  }\n  useEffect(() => {\n    console.log(window.location)\n    const id = Number(window.location.pathname.split(\"/\")[2])\n    console.log(id)\n    console.log(postsUrl+`/${id}`)\n    fetch(postsUrl+`/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        resetTitle(data.slug)\n        resetContent(data.excerpt.rendered)\n        // content = data.excerpt.rendered\n      })\n      .catch(err=>console.log(err))\n    return () => {\n      // cleanup\n    }\n  }, [title,content])\n  return (\n    <div className=\"formConatainer\">\n      <form onSubmit={submitHandler} className={styles.form}>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Title: </label>\n          <input {...bindTitle} name='title' type=\"text\" className={styles.formText} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Content: </label>\n          <textarea {...bindContent} name='content' type=\"textarea\" className={styles.formTextArea}/>\n        </div>\n        {/* <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div> */}\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Edit\n"]},"metadata":{},"sourceType":"module"}