{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useRef, useEffect } from 'react';\nimport styles from 'client/styles/Edit.module.css';\nimport { UserContext } from 'pages/_app';\nimport useInput from 'client/hooks/useInput';\n\nfunction Edit({\n  post\n}) {\n  const inputRef = useRef(null);\n  const userContext = useContext(UserContext);\n  const [title, bindTitle, resetTitle] = useInput('');\n  const [content, bindContent, resetContent] = useInput('');\n  const postsUrl = process.env.getPostsUrl;\n  console.log('in edit');\n  console.log(userContext.loginState); // console.log('post=')\n  // console.log(post)\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    // const requestOptions = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({ username: email, password:pass })\n    // };\n    // fetch(toeknUrl, requestOptions)\n    // .then(resf => resf.json())\n    // .then(data => {\n    //   if(data.token){\n    //     // success login\n    //     console.log(data)\n    //     userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n    //     localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n    //     Router.push('/')\n    //   } else {\n    //     // wrong information\n    //     userContext.loginDispatch({type:'error', error:'wrong email or password'})\n    //     resetEmail('')\n    //     resetPass('')\n    //   }\n    // })\n    // .catch(err => {\n    //   // other errors\n    //   userContext.loginDispatch({type:'error', error:err})\n    // })\n    // ------------------------------------------------\n    e.preventDefault();\n    console.log('haha');\n  };\n\n  useEffect(() => {\n    console.log(window.location);\n    const id = Number(window.location.pathname.split(\"/\")[2]);\n    console.log(id);\n    console.log(postsUrl + `/${id}`);\n    fetch(postsUrl + `/${id}`).then(res => res.json()).then(data => console.log(data));\n    return () => {// cleanup\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"formConatainer\"\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Title: \"), __jsx(\"input\", _extends({}, bindTitle, {\n    type: \"text\",\n    className: styles.formTextarea,\n    ref: inputRef\n  }))), __jsx(\"div\", {\n    className: styles.formOption\n  }, __jsx(\"label\", {\n    className: styles.formLabel\n  }, \"Content: \"), __jsx(\"input\", _extends({}, bindContent, {\n    type: \"textarea\",\n    className: styles.formTextarea\n  }))), __jsx(\"button\", {\n    className: styles.formSubmit\n  }, \"Submit\")));\n}\n\nexport default Edit;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/pages/posts/[id]/Edit.js"],"names":["React","useContext","useRef","useEffect","styles","UserContext","useInput","Edit","post","inputRef","userContext","title","bindTitle","resetTitle","content","bindContent","resetContent","postsUrl","process","env","getPostsUrl","console","log","loginState","submitHandler","e","preventDefault","window","location","id","Number","pathname","split","fetch","then","res","json","data","form","formOption","formLabel","formTextarea","formSubmit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AACpB,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMQ,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM,CAACM,KAAD,EAAQC,SAAR,EAAmBC,UAAnB,IAAiCP,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACQ,OAAD,EAAUC,WAAV,EAAuBC,YAAvB,IAAuCV,QAAQ,CAAC,EAAD,CAArD;AACA,QAAMW,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAW,CAACa,UAAxB,EARoB,CAUpB;AACA;;AAEA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GA9BD;;AA+BAnB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAM,CAACC,QAAnB;AACA,UAAMC,EAAE,GAAGC,MAAM,CAACH,MAAM,CAACC,QAAP,CAAgBG,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAD,CAAjB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,GAAE,IAAGY,EAAG,EAA5B;AACAI,IAAAA,KAAK,CAAChB,QAAQ,GAAE,IAAGY,EAAG,EAAjB,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIhB,OAAO,CAACC,GAAR,CAAYe,IAAZ,CAFd;AAGA,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAYA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,QAAQ,EAAEb,aAAhB;AAA+B,IAAA,SAAS,EAAEpB,MAAM,CAACkC;AAAjD,KACE;AAAK,IAAA,SAAS,EAAElC,MAAM,CAACmC;AAAvB,KACE;AAAO,IAAA,SAAS,EAAEnC,MAAM,CAACoC;AAAzB,eADF,EAEE,4BAAW5B,SAAX;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAER,MAAM,CAACqC,YAApD;AAAkE,IAAA,GAAG,EAAEhC;AAAvE,KAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACmC;AAAvB,KACE;AAAO,IAAA,SAAS,EAAEnC,MAAM,CAACoC;AAAzB,iBADF,EAEE,4BAAWzB,WAAX;AAAwB,IAAA,IAAI,EAAC,UAA7B;AAAwC,IAAA,SAAS,EAAEX,MAAM,CAACqC;AAA1D,KAFF,CALF,EAYE;AAAQ,IAAA,SAAS,EAAErC,MAAM,CAACsC;AAA1B,cAZF,CADF,CADF;AAkBD;;AAED,eAAenC,IAAf","sourcesContent":["import React, {useContext, useRef,useEffect} from 'react'\nimport styles from 'client/styles/Edit.module.css'\nimport {UserContext} from 'pages/_app'\nimport useInput from 'client/hooks/useInput'\n\nfunction Edit({post}) {\n  const inputRef = useRef(null)\n  const userContext = useContext(UserContext)\n  const [title, bindTitle, resetTitle] = useInput('')\n  const [content, bindContent, resetContent] = useInput('')\n  const postsUrl = process.env.getPostsUrl\n\n  console.log('in edit')\n  console.log(userContext.loginState)\n  \n  // console.log('post=')\n  // console.log(post)\n\n  const submitHandler = e => {\n    // ----------fetch version get token---------------\n    // const requestOptions = {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({ username: email, password:pass })\n    // };\n    // fetch(toeknUrl, requestOptions)\n    // .then(resf => resf.json())\n    // .then(data => {\n    //   if(data.token){\n    //     // success login\n    //     console.log(data)\n    //     userContext.loginDispatch({type:'login', token:data.token, mail:data.user_display_name, pass:pass, id:data.id})\n    //     localStorage.setItem('userInfo', JSON.stringify({name:data.user_display_name, token:data.token}))\n    //     Router.push('/')\n    //   } else {\n    //     // wrong information\n    //     userContext.loginDispatch({type:'error', error:'wrong email or password'})\n    //     resetEmail('')\n    //     resetPass('')\n    //   }\n    // })\n    // .catch(err => {\n    //   // other errors\n    //   userContext.loginDispatch({type:'error', error:err})\n    // })\n    // ------------------------------------------------\n    e.preventDefault()\n    console.log('haha')\n  }\n  useEffect(() => {\n    console.log(window.location)\n    const id = Number(window.location.pathname.split(\"/\")[2])\n    console.log(id)\n    console.log(postsUrl+`/${id}`)\n    fetch(postsUrl+`/${id}`)\n    .then(res => res.json())\n    .then(data => console.log(data))\n    return () => {\n      // cleanup\n    }\n  }, [])\n  return (\n    <div className=\"formConatainer\">\n      <form onSubmit={submitHandler} className={styles.form}>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Title: </label>\n          <input {...bindTitle} type=\"text\" className={styles.formTextarea} ref={inputRef}/>\n        </div>\n        <div className={styles.formOption}>\n          <label className={styles.formLabel}>Content: </label>\n          <input {...bindContent} type=\"textarea\" className={styles.formTextarea}/>\n        </div>\n        {/* <div style={{height:'10px',textAlign:'center'}}>\n          {userContext.error && !email && <span style={{color:'red'}}>Wrong email or password</span>}\n        </div> */}\n        <button className={styles.formSubmit}>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Edit\n"]},"metadata":{},"sourceType":"module"}