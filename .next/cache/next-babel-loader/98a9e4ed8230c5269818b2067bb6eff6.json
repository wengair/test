{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport ListLists from './listlists';\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\nexport default function List() {\n  state = {\n    // Initial state.\n    isFetching: false,\n    posts: []\n  };\n\n  componentDidMount = () => {\n    this.fetchPosts();\n  };\n\n  let fetchPostsAsync = async () => {\n    try {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        isFetching: true\n      })); // Sets loading state.\n\n      const response = await axios.get(POSTS_SERVICE_URL);\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        isFetching: false,\n        posts: response.data\n      }));\n    } catch (e) {\n      console.log(e);\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        isFetching: false\n      }));\n    }\n  };\n\n  fetchPosts = this.fetchPostsAsync;\n  const postList = this.state.posts.map(post => __jsx(\"div\", null, __jsx(Link, {\n    href: \"/posts/[id]\",\n    as: `/posts/${post.id}`\n  }, __jsx(\"a\", {\n    key: post.id,\n    postData: `${post}`\n  }, __jsx(\"h2\", null, \"Title: \", post.title.rendered))), __jsx(\"p\", null, \"Status: \", post.status), __jsx(\"p\", null, \"Content: \", post.content.rendered)));\n  return __jsx(\"div\", null, postList);\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","Link","axios","ListLists","POSTS_SERVICE_URL","List","state","isFetching","posts","componentDidMount","fetchPosts","fetchPostsAsync","setState","response","get","data","e","console","log","postList","map","post","id","title","rendered","status","content"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,iBAAiB,GAAG,kCAA1B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7BC,EAAAA,KAAK,GAAG;AACN;AACAC,IAAAA,UAAU,EAAE,KAFN;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAAR;;AAOAC,EAAAA,iBAAiB,GAAG,MAAM;AACxB,SAAKC,UAAL;AACD,GAFD;;AAIA,MAAIC,eAAe,GAAG,YAAW;AAC/B,QAAI;AACF,WAAKC,QAAL,iCAAmB,KAAKN,KAAxB;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,UADE,CACkD;;AACpD,YAAMM,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,iBAAV,CAAvB;AACA,WAAKQ,QAAL,iCACK,KAAKN,KADV;AAEEC,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,KAAK,EAAEK,QAAQ,CAACE;AAHlB;AAKD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAKJ,QAAL,iCAAmB,KAAKN,KAAxB;AAA+BC,QAAAA,UAAU,EAAE;AAA3C;AACD;AACF,GAbD;;AAeAG,EAAAA,UAAU,GAAG,KAAKC,eAAlB;AAEA,QAAMQ,QAAQ,GAAG,KAAKb,KAAL,CAAWE,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,IACtC,mBACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG;AAA/C,KACE;AAAG,IAAA,GAAG,EAAED,IAAI,CAACC,EAAb;AAAiB,IAAA,QAAQ,EAAG,GAAED,IAAK;AAAnC,KACE,6BAAYA,IAAI,CAACE,KAAL,CAAWC,QAAvB,CADF,CADF,CADF,EAIE,6BAAYH,IAAI,CAACI,MAAjB,CAJF,EAKE,8BAAaJ,IAAI,CAACK,OAAL,CAAaF,QAA1B,CALF,CADa,CAAjB;AASA,SAAO,mBAAML,QAAN,CAAP;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link'\nimport axios from 'axios';\nimport ListLists from './listlists'\n\nconst POSTS_SERVICE_URL = 'http://wp:80/wp-json/wp/v2/posts';\n\nexport default function List() {\n  state = {\n    // Initial state.\n    isFetching: false,\n    posts: []\n  }\n\n\n  componentDidMount = () => {\n    this.fetchPosts()\n  }\n\n  let fetchPostsAsync = async() => {\n    try {\n      this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n      const response = await axios.get(POSTS_SERVICE_URL);\n      this.setState({\n        ...this.state,\n        isFetching: false,\n        posts: response.data\n      });\n    } catch (e) {\n      console.log(e);\n      this.setState({ ...this.state, isFetching: false });\n    }\n  }\n\n  fetchPosts = this.fetchPostsAsync\n\n  const postList = this.state.posts.map(post =>\n      <div>\n        <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n          <a key={post.id} postData={`${post}`}>\n            <h2>Title: {post.title.rendered}</h2></a></Link>\n        <p>Status: {post.status}</p>\n        <p>Content: {post.content.rendered}</p>\n      </div>)\n\n  return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}