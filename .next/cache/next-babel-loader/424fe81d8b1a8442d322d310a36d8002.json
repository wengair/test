{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport Link from 'next/link'; // import ListLists from './listlists'\n\nexport default function List() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const POSTS_SERVICE_URL = 'http://192.168.0.1:80/wp-json/wp/v2/posts';\n  // const [state, setState] = useState(null)\n  //   useEffect(() => {\n  //       fetch(POSTS_SERVICE_URL).then(\n  //           res => setState(res.data)\n  //       )\n  //   })\n  //   console.log(state);\n  //   return (\n  //       <div>\n  //           {state}\n  //       </div>\n  //   )\n  var useFetch = function useFetch(url, options) {\n    _s();\n\n    var _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        response = _React$useState2[0],\n        setResponse = _React$useState2[1];\n\n    var _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        error = _React$useState4[0],\n        setError = _React$useState4[1];\n\n    React.useEffect(function () {\n      var fetchData = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _res, json;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return fetch(url, options);\n\n                case 3:\n                  _res = _context.sent;\n                  _context.next = 6;\n                  return _res.json();\n\n                case 6:\n                  json = _context.sent;\n                  setResponse(json);\n                  _context.next = 13;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](0);\n                  setError(_context.t0);\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 10]]);\n        }));\n\n        return function fetchData() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchData();\n    }, []);\n    return {\n      response: response,\n      error: error\n    };\n  };\n\n  _s(useFetch, \"92kGcqJmUZHxj5g8slhrA1SfVKo=\");\n\n  var res = useFetch(\"https://dog.ceo/api/breeds/image/random\", {});\n\n  if (!res.response) {\n    return __jsx(\"div\", null, \"Loading...\");\n  }\n\n  var data = res.response;\n  console.log(\"from list.js\");\n  console.log(data);\n  return __jsx(\"div\", null, \"success\"); // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n  // constructor(props) => {\n  //   super(props)\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n  // fetchPosts = this.fetchPostsAsync\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n  // return <div>{postList}</div>\n} // Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n_s2(List, \"y8uEuLFgqaPXQxYUFOLsMqh7FtE=\", true);\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/node/app/pages/posts/list.js"],"names":["React","Component","useEffect","useState","Link","List","useFetch","url","options","response","setResponse","error","setError","fetchData","fetch","res","json","data","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAAA;;AAAA,0BACDR,KAAK,CAACG,QAAN,CAAe,IAAf,CADC;AAAA;AAAA,QAC1BM,QAD0B;AAAA,QAChBC,WADgB;;AAAA,2BAEPV,KAAK,CAACG,QAAN,CAAe,IAAf,CAFO;AAAA;AAAA,QAE1BQ,KAF0B;AAAA,QAEnBC,QAFmB;;AAGjCZ,IAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpB,UAAMW,SAAS;AAAA,4EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEIC,KAAK,CAACP,GAAD,EAAMC,OAAN,CAFT;;AAAA;AAERO,kBAAAA,IAFQ;AAAA;AAAA,yBAGKA,IAAG,CAACC,IAAJ,EAHL;;AAAA;AAGRA,kBAAAA,IAHQ;AAIdN,kBAAAA,WAAW,CAACM,IAAD,CAAX;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdJ,kBAAAA,QAAQ,aAAR;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAATC,SAAS;AAAA;AAAA;AAAA,SAAf;;AASAA,MAAAA,SAAS;AACZ,KAXC,EAWC,EAXD;AAYF,WAAO;AAAEJ,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,KAAK,EAALA;AAAZ,KAAP;AACC,GAhBD;;AAd6B,KAcvBL,QAduB;;AAgC7B,MAAMS,GAAG,GAAGT,QAAQ,CAAC,yCAAD,EAA4C,EAA5C,CAApB;;AACA,MAAI,CAACS,GAAG,CAACN,QAAT,EAAmB;AACjB,WAAO,gCAAP;AACD;;AACD,MAAMQ,IAAI,GAAGF,GAAG,CAACN,QAAjB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE,6BADF,CAvC6B,CA6C7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAzJwBZ,I;;KAAAA,I","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport Link from 'next/link'\n// import ListLists from './listlists'\n\n\nexport default function List() {\n  // const POSTS_SERVICE_URL = 'http://192.168.0.1:80/wp-json/wp/v2/posts';\n  // const [state, setState] = useState(null)\n  //   useEffect(() => {\n  //       fetch(POSTS_SERVICE_URL).then(\n  //           res => setState(res.data)\n  //       )\n  //   })\n  //   console.log(state);\n  //   return (\n  //       <div>\n  //           {state}\n  //       </div>\n  //   )\n  const useFetch = (url, options) => {\n    const [response, setResponse] = React.useState(null);\n    const [error, setError] = React.useState(null);\n    React.useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const res = await fetch(url, options);\n          const json = await res.json();\n          setResponse(json);\n        } catch (error) {\n          setError(error);\n        }\n      };\n      fetchData();\n  }, []);\n  return { response, error };\n  };\n\n  const res = useFetch(\"https://dog.ceo/api/breeds/image/random\", {});\n  if (!res.response) {\n    return <div>Loading...</div>\n  }\n  const data = res.response\n  console.log(\"from list.js\")\n  console.log(data)\n  return (\n    <div>\n      success\n    </div>\n  );\n\n  // useEffect(() => {\n  //   // console.log(\"in useEffect\");\n  //   const fetchUsers = async () => {\n  //     // console.log(POSTS_SERVICE_URL);\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     setData(response.data);\n  //     // console.log(response);\n  //   };\n  //   // console.log(\"finish function setup\");\n  //   fetchUsers();\n  //   // console.log(\"run the function\");\n  // }, []); // Runs once\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       console.log(POSTS_SERVICE_URL);\n  //       setData({ ...data, isFetching: true });\n  //       const response = await axios.get(POSTS_SERVICE_URL);\n  //       setData({\n  //         ...data,\n  //         posts: response.data,\n  //         isFetching: false\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //       setData({ ...data, isFetching: false });\n  //     }\n  //   };\n  //   fetchUsers();\n  // }, []); // Runs once\n\n  // constructor(props) => {\n  //   super(props)\n\n  //   this.state = {\n  //     isFetching: false,\n  //     posts: []\n  //   }\n  // }\n\n  // componentDidMount = () => {\n  //   this.fetchPosts()\n  // }\n\n  // let fetchPostsAsync = async() => {\n  //   try {\n  //     this.setState({ ...this.state, isFetching: true }); // Sets loading state.\n  //     const response = await axios.get(POSTS_SERVICE_URL);\n  //     this.setState({\n  //       ...this.state,\n  //       isFetching: false,\n  //       posts: response.data\n  //     });\n  //   } catch (e) {\n  //     console.log(e);\n  //     this.setState({ ...this.state, isFetching: false });\n  //   }\n  // }\n\n  // fetchPosts = this.fetchPostsAsync\n\n  // console.log(data);\n  // console.log(data.posts);\n  // const postList = data.posts.map(post =>\n  //     <div>\n  //       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n  //         <a key={post.id} postData={`${post}`}>\n  //           <h2>Title: {post.title.rendered}</h2></a></Link>\n  //       <p>Status: {post.status}</p>\n  //       <p>Content: {post.content.rendered}</p>\n  //     </div>)\n  // console.log(postList);\n\n  // return <div>{postList}</div>\n}\n// Next.js\n// const List = ({ posts }) => {\n//   const postList = posts.map(post =>\n//     <div>\n//       <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n//         <a key={post.id} postData={`${post}`}>\n//           <h2>Title: {post.title.rendered}</h2></a></Link>\n//       <p>Status: {post.status}</p>\n//       <p>Content: {post.content.rendered}</p>\n//     </div>)\n//   return <div>{postList}</div>\n// }\n// Next.js server side\n// List.getInitialProps = async ({ req }) => {\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const json = await res.json()\n//   return { posts: json }\n// }\n// ----------------------\n// Next.js static\n// export async function getStaticProps() {\n//   // Call an external API endpoint to get posts\n//   const res = await fetch('http://wp:80/wp-json/wp/v2/posts')\n//   const posts = await res.json()\n\n//   // By returning { props: posts }, the Blog component\n//   // will receive `posts` as a prop at build time\n//   return {\n//     props: {\n//       posts,\n//     },\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}