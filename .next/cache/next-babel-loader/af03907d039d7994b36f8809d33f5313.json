{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport useInput from 'client/hooks/useInput';\nimport { UserContext } from 'pages/index';\n\nfunction LoginForm() {\n  const [firstName, bindFirstName, resetFirstName] = useInput('');\n  const [lastName, bindLastName, resetLastName] = useInput('');\n  const userContext = useContext(UserContext);\n\n  const submitHandler = e => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: email,\n        password: pass\n      })\n    };\n    fetch(toeknUrl, requestOptions).then(resf => resf.json()) // necessary!\n    .then(data => {\n      if (data.token) {\n        console.log(data);\n        userLogin(email, data.token);\n        Router.push('/');\n      } else {\n        console.log(\"login fail\");\n      }\n    }).catch(errf => {\n      console.log('errf=');\n      console.log(errf);\n    });\n    userContext.loginDispatch({\n      type: 'login'\n    });\n    e.preventDefault(); // alert(`Hello ${firstName} ${lastName}`)\n\n    resetFirstName();\n    resetLastName();\n    console.log('click');\n  };\n\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: submitHandler\n  }, __jsx(\"div\", null, __jsx(\"label\", null, \"E-mail: \"), __jsx(\"input\", _extends({}, bindFirstName, {\n    type: \"text\"\n  })), __jsx(\"label\", null, \"Password: \"), __jsx(\"input\", _extends({}, bindLastName, {\n    type: \"text\"\n  }))), __jsx(\"button\", null, \"Submit\")));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/jtweng/Desktop/record/OSU/mac/practice/docker/test/client/components/LoginForm.js"],"names":["React","useContext","useInput","UserContext","LoginForm","firstName","bindFirstName","resetFirstName","lastName","bindLastName","resetLastName","userContext","submitHandler","e","requestOptions","method","headers","body","JSON","stringify","username","email","password","pass","fetch","toeknUrl","then","resf","json","data","token","console","log","userLogin","Router","push","catch","errf","loginDispatch","type","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,SAAD,EAAYC,aAAZ,EAA2BC,cAA3B,IAA6CL,QAAQ,CAAC,EAAD,CAA3D;AACA,QAAM,CAACM,QAAD,EAAWC,YAAX,EAAyBC,aAAzB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMS,WAAW,GAAGV,UAAU,CAACE,WAAD,CAA9B;;AAEA,QAAMS,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFY;AAGrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,QAAQ,EAAEC,KAAZ;AAAmBC,QAAAA,QAAQ,EAACC;AAA5B,OAAf;AAHe,KAAvB;AAKAC,IAAAA,KAAK,CAACC,QAAD,EAAWX,cAAX,CAAL,CACCY,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAC2B;AAD3B,KAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACC,KAAR,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,QAAAA,SAAS,CAACZ,KAAD,EAAQQ,IAAI,CAACC,KAAb,CAAT;AACAI,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD,OAJD,MAIO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,KAVD,EAWCI,KAXD,CAWOC,IAAI,IAAI;AACbN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACD,KAdD;AAeA1B,IAAAA,WAAW,CAAC2B,aAAZ,CAA0B;AAACC,MAAAA,IAAI,EAAC;AAAN,KAA1B;AACA1B,IAAAA,CAAC,CAAC2B,cAAF,GAtByB,CAuBzB;;AACAjC,IAAAA,cAAc;AACdG,IAAAA,aAAa;AACbqB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GA3BD;;AA6BA,SACE,mBACE;AAAM,IAAA,QAAQ,EAAEpB;AAAhB,KACE,mBACE,gCADF,EAEE,4BAAWN,aAAX;AAA0B,IAAA,IAAI,EAAC;AAA/B,KAFF,EAGE,kCAHF,EAIE,4BAAWG,YAAX;AAAyB,IAAA,IAAI,EAAC;AAA9B,KAJF,CADF,EAOE,+BAPF,CADF,CADF;AAaD;;AAED,eAAeL,SAAf","sourcesContent":["import React,{useContext} from 'react'\nimport useInput from 'client/hooks/useInput'\nimport {UserContext} from 'pages/index'\n\nfunction LoginForm() {\n  const [firstName, bindFirstName, resetFirstName] = useInput('')\n  const [lastName, bindLastName, resetLastName] = useInput('')\n  const userContext = useContext(UserContext)\n\n  const submitHandler = e => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username: email, password:pass })\n    };\n    fetch(toeknUrl, requestOptions)\n    .then(resf => resf.json()) // necessary!\n    .then(data => {\n      if(data.token){\n        console.log(data)\n        userLogin(email, data.token)\n        Router.push('/')\n      } else {\n        console.log(\"login fail\")\n      }\n    })\n    .catch(errf => {\n      console.log('errf=')\n      console.log(errf)\n    })\n    userContext.loginDispatch({type:'login'})\n    e.preventDefault()\n    // alert(`Hello ${firstName} ${lastName}`)\n    resetFirstName()\n    resetLastName()\n    console.log('click')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div>\n          <label>E-mail: </label>\n          <input {...bindFirstName} type=\"text\"/>\n          <label >Password: </label>\n          <input {...bindLastName} type=\"text\"/>\n        </div>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}